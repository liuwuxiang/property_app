<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springmvc.dao.WnkOrderCommodityTwoMapper" >
    <resultMap id="BaseResultMap" type="com.springmvc.entity.WnkOrderCommodityTwo" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="order_id" property="order_id" jdbcType="INTEGER" />
        <result column="commodity_id" property="commodity_id" jdbcType="INTEGER" />
        <result column="buy_number" property="buy_number" jdbcType="INTEGER" />
        <result column="count_amount" property="count_amount" jdbcType="DOUBLE" />
        <result column="commodity_guige_id" property="commodity_guige_id" jdbcType="INTEGER" />
        <result column="already_used_number" property="already_used_number" jdbcType="INTEGER" />
        <result column="refunded_number" property="refunded_number" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_Column_List" >
        id,order_id,commodity_id,buy_number,count_amount,commodity_guige_id,
        (SELECT wnk_commodities.name FROM wnk_commodities WHERE wnk_order_commodity_two.commodity_id=wnk_commodities.id) as commodity_name,
        (SELECT wnk_commodity_specifications.specifications_name FROM wnk_commodity_specifications WHERE wnk_order_commodity_two.commodity_guige_id=wnk_commodity_specifications.id) as specifications_name,
        already_used_number,refunded_number
    </sql>

    <!--查询某个订单的商品-->
    <select id="selectCommodityByOrderId" resultType="java.util.HashMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM wnk_order_commodity_two
        where order_id = #{param1,jdbcType=INTEGER}
    </select>

    <!--插入新订单商品-->
    <insert id="insertNewOrderCommodity" parameterType="com.springmvc.entity.WnkOrderCommodityTwo" useGeneratedKeys="true" keyProperty="id">
        INSERT  INTO wnk_order_commodity_two(order_id,commodity_id,buy_number,count_amount,commodity_guige_id)
        VALUES (#{order_id,jdbcType=INTEGER},#{commodity_id,jdbcType=INTEGER},#{buy_number,jdbcType=INTEGER},#{count_amount,jdbcType=DOUBLE}
        ,#{commodity_guige_id,jdbcType=INTEGER})
    </insert>

    <!--销售总量-->
    <select id="selectSalesTotalById" parameterType="int" resultType="java.lang.Integer">
        SELECT
        COUNT(oc.buy_number) AS buy_number
        FROM wnk_order_commodity_two AS oc INNER JOIN wnk_orders_two AS o
        ON (oc.order_id = o.id AND business_id = #{business_id} AND o.state != 0);
    </select>

    <select id="selectSalesCompositionByCommoditiesId" parameterType="int" resultType="map">
        SELECT
        SUM(oc.buy_number) AS salesVolume , COUNT(oc.order_id) AS transactionNumber,SUM(o.amount) AS money
        FROM wnk_order_commodity_two AS oc INNER JOIN wnk_orders_two AS o
        ON (
        oc.order_id = o.id              AND
        o.business_id = #{business_id}  AND
        o.state = 2                     AND
        oc.commodity_id=#{commodity_id}
        );
    </select>

    <select id="selectWaitAccountEntryByCommoditiesId" parameterType="int" resultType="map">
        SELECT
        SUM(oc.buy_number) AS salesVolume , COUNT(oc.order_id) AS transactionNumber,SUM(o.amount) AS money
        FROM wnk_order_commodity_two AS oc INNER JOIN wnk_orders_two AS o
        ON (
        oc.order_id = o.id              AND
        o.business_id = #{business_id}  AND
        o.state = 1                     AND
        oc.commodity_id=#{commodity_id}
        );
    </select>

    <!--更新商品使用量和退款量-->
    <insert id="updateCommodityMakeNumberAndRefundNumber">
        UPDATE wnk_order_commodity_two
        SET already_used_number = #{already_used_number,jdbcType=INTEGER},refunded_number = #{refunded_number,jdbcType=INTEGER}
        WHERE id = #{id,jdbcType=VARCHAR}
    </insert>



    <!--通过ID查询记录-->
    <select id="selectByID" resultMap="BaseResultMap">
        SELECT
        *
        FROM wnk_order_commodity_two
        where id = #{param1,jdbcType=INTEGER}
    </select>

</mapper>